# Default values for k8sapp
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# command to be executed to start the container this will replace the entrypoint.sh script
command: []
# command:
#   - /bin/sh
#   - echo
#   - "hello world"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      targetPort: 80
      port: 80
    - name: https
      protocol: TCP
      targetPort: 443
      port: 443

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

traefik: {}
# traefik:
#   middlewares:
#    - name: my-middleware
#      sourceRanges:
#        - 35.197.213.9/32
#        - 34.142.95.12/32
#    - name: other-middleware
#      sourceRanges:
#        - 35.197.213.9/32
#        - 34.142.95.12/32
#   entryPoints:
#     - web
#     - websecure
#   routes:
#     # - service: service-name
#     #   port: 80
#     #   matches:
#     #   - match: Host(`api-xxx-dev.da.com`) && PathPrefix(`/api/admin/css`)
#     #   - match: Host(`a.com`) && PathPrefix(`/api`)
#     #   - match: Host(`b.com`) && PathPrefix(`/api`)
#     #   - match: Host(`c.com`) && PathPrefix(`/api`)
#     - service: service-name
#       port: 80
#       matches:
#       - match: Host(`a.com`) && PathPrefix(`/api`)
#       - match: Host(`b.com`) && PathPrefix(`/api`)
#       - match: Host(`c.com`) && PathPrefix(`/api`)
#       middlewares:
#       - name: my-middleware
#       - name: other-middleware

externalSecrets: []

# livenessProbe:
#   httpGet:
#     path: /healthz        # endpoint
#     port: 8080            # port
#   initialDelaySeconds: 5  # Wait 5 seconds when the pod starts after first check
#   periodSeconds: 10       # Check endpoint every 10 seconds
#   timeoutSeconds: 5       # Wait until 5 seconds for a response
#   failureThreshold: 3     # Limit of allowed failures 

# readinessProbe:
#   path: /ready
#   port: 8080
#   initialDelaySeconds: 5  # Wait 5 seconds when the pod starts after first check
#   periodSeconds: 10       # Check endpoint every 10 seconds
#   timeoutSeconds: 5       # Wait until 5 seconds for a response
#   failureThreshold: 3     # Limit of allowed failures 

# Env vars to be defined on deployment
env: {}

# Env vars from secret or configMap to be used on the deployment
# envFrom: []
# envFrom:
#   - configMapRef:
#       name: my-configmap-global
#   - secretRef:
#       name: my-app-secrets
#   - configMapRef:
#       name: config-opcional
#       optional: true
#   - secretRef:
#       name: secrets-with-prefix
#       prefix: SECRETO_
