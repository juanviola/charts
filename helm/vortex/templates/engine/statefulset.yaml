{{- if .Values.engine.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vortex.fullname" . }}-engine
  labels:
    {{- include "vortex.labels" . | nindent 4 }}
    {{- include "vortex.engine.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "vortex.fullname" . }}-engine-headless
  {{- if not .Values.engine.autoscaling.enabled }}
  replicas: {{ .Values.engine.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vortex.selectorLabels" . | nindent 6 }}
      {{- include "vortex.engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vortex.labels" . | nindent 8 }}
        {{- include "vortex.engine.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.engine.terminationGracePeriodSeconds | default 300 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vortex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-engine
          securityContext:
            {{- toYaml .Values.engine.securityContext | nindent 12 }}
          image: "{{ .Values.engine.image.repository }}:{{ .Values.engine.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          command:
            - java
            - -Xms$(JAVA_XMS)
            - -Xmx$(JAVA_XMX)
            - -Xss$(JAVA_XSS)
            - -XX:+UseG1GC
            - -XX:+DisableAttachMechanism
            - -XX:ParallelGCThreads=$(JAVA_PARALLELGCTHREADS)
            - -XX:ConcGCThreads=$(JAVA_CONCGCTHREADS)
            - -XX:InitiatingHeapOccupancyPercent=$(JAVA_IHOP)
            - -XX:MaxGCPauseMillis=30
            - -XX:GCPauseIntervalMillis=300
            - -XX:G1HeapRegionSize=32m
            - -XX:MetaspaceSize=1024m
            - -XX:MaxDirectMemorySize=$(JAVA_MAXDIRECTMEMORYSIZE)
            - -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses
            - -XX:+UseStringDeduplication
            - -Dstorage=$(JAVA_STORAGE)
            - -Dlog2=$(JAVA_LOG)
            {{- $ctx := . }}
            {{- range $i := until (int $ctx.Values.engine.replicaCount) }}
            - -Dakka.cluster.seed-nodes.{{$i}}=akka://{{ $ctx.Values.engine.actorsystem }}@vortex-engine-{{$i}}.{{ include "vortex.fullname" $ctx }}-engine-headless.{{ $ctx.Release.Namespace }}.svc.cluster.local:2552
            {{- end }}
            - -Dakka.remote.artery.canonical.hostname=$(POD_IP)
            - -Dakka.remote.artery.bind.port=2552
            - -Damqp=$(JAVA_AMQP)
            - -cp
            - "$(JAVA_JAR):libs/*:conf"
            - io.vortex.akka.Main
            - "$(JAVA_HTTP_SERVER_HOST)"
            - "8080"
          ports:
          {{- range .Values.engine.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              {{- if .protocol }}
              protocol: {{ .protocol }}
              {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: engine-core
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: V12_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: rootPassword
            - name: V12_REDIS_CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: password
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: "V12_CLUSTER_HOST"
              value: "$(POD_NAME).vortex-engine-headless.{{ .Release.Namespace }}.svc.cluster.local"  
            {{- if .Values.engine.env }}
            {{- range $key, $value := .Values.engine.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          {{- if .Values.engine.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.engine.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.engine.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.engine.readinessProbe | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "/opt/app/shutdown.sh"]
          resources:
            {{- toYaml .Values.engine.resources | nindent 12 }}
          volumeMounts:
            - name: akka-shutdown-script
              mountPath: /opt/app/shutdown.sh
              subPath: shutdown.sh
              readOnly: false
            {{- with .Values.engine.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: akka-shutdown-script
          configMap:
            name: akka-shutdown
            defaultMode: 0755
        {{- with .Values.engine.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.engine.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.engine.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.engine.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
